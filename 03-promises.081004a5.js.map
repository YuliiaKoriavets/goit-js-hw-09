{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAEtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAO,CACXF,WACAC,SAGIE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQL,GAERM,EAAON,E,GAERD,E,IA0BPL,EAAOc,iBAAiB,UAtBxB,SAAsBC,GACpBA,EAAMC,iBAQN,IANA,IAAMC,EAAUF,EAAMG,cAAcC,SAEhCC,EAAQC,OAAOJ,EAAQZ,MAAMiB,OAC7BC,EAAOF,OAAOJ,EAAQM,KAAKD,OAC3BE,EAASH,OAAOJ,EAAQO,OAAOF,OAE1BG,EAAW,EAAGA,GAAYD,EAAQC,IACzCtB,EAAcsB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBP,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBP,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9De,GAASG,EAEXvB,EAAOiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport { Notify } from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const data = {\n    position,\n    delay,\n  };\n\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(data);\n      } else {\n        reject(data);\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const inputEl = event.currentTarget.elements;\n\n  let delay = Number(inputEl.delay.value);\n  let step = Number(inputEl.step.value);\n  let amount = Number(inputEl.amount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  formEl.reset();\n}\n\nformEl.addEventListener('submit', handleSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","data","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","inputEl","currentTarget","elements","delay1","Number","value","step","amount","position1","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.081004a5.js.map"}